{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","onChange","event","onFilterChange","target","value","selected","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","valueArray","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setenteredTitle","enteredAmount","setenteredAmount","enteredDate","setenteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setisEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2359d93a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ExpenseDate.css';\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" }); // date component \r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>  {/* extracted date object into day, month and year */}\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react';\r\nimport './Card.css';\r\nfunction Card(props) {\r\n    const classes=\"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nfunction ExpenseItem(props) {\r\n   \r\n  return (\r\n    <li>\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date}/>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">{props.amount}$</div>\r\n      </div> \r\n    </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nfunction ExpensesList(props) {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map( (expense) => (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nexport default ExpensesList;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const yearChangeHandler = (event) =>{\r\n    \r\n    props.onFilterChange(event.target.value);\r\n  }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={yearChangeHandler}  value={props.selected}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nfunction ChartBar(props) {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n        \r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\nfunction Chart(props) {\r\n  const valueArray = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMax = Math.max(...valueArray);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nfunction ExpensesChart(props) {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 }\r\n  ];\r\n  for (const expense of props.expenses){\r\n    const expenseMonth=expense.date.getMonth(); //starts at 0 \r\n    chartDataPoints[expenseMonth].value +=expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    // console.log(selectedYear);\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses=props.expenses.filter( (expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  \r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          onFilterChange={filterChangeHandler}\r\n          selected={filteredYear}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nfunction ExpenseForm(props) {\r\n    const [enteredTitle, setenteredTitle] = useState('');\r\n    const [enteredAmount, setenteredAmount] = useState('');\r\n    const [enteredDate, setenteredDate] = useState('');\r\n//   const [userInput, setUserInput] = useState({\r\n//     enteredTitle: \"\",\r\n//     enteredAmount: \"\",\r\n//     enteredDate: \"\",\r\n//   });\r\n  const titleChangeHandler = (event) => {\r\n      setenteredTitle(event.target.value);\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n      setenteredAmount(event.target.value);\r\n    // setUserInput((prevState) => {\r\n    //     return { ...prevState, enteredAmount: event.target.value };\r\n\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n      setenteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler =(event) =>{\r\n    event.preventDefault();\r\n\r\n    const expenseData={\r\n        title:enteredTitle,\r\n        amount:+enteredAmount,\r\n        date:new Date(enteredDate)\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setenteredTitle(\"\");\r\n    setenteredAmount(\"\");\r\n    setenteredDate(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n        \r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nfunction NewExpense(props) {\r\n  const [isEditing, setisEditing] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setisEditing(false);\r\n  };\r\n  const startEditingHandler = () => {\r\n    setisEditing(true);\r\n  };\r\n  const stopEditingHandler = () => {\r\n    setisEditing(false);\r\n  }\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing ? (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      ) : (\r\n        <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import React,{useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\n// import ExpenseItem from \"./components/ExpenseItem\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses , setExpenses]= useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) =>(\n        setExpenses( (prevExpenses) => {\n          return [expense, ...prevExpenses];\n        })\n  );\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses}></Expenses>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}